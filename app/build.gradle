plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.omsi.composetemplate"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }


    signingConfigs {
        release {
            storeFile file(getSecretKeys()['RELEASE_STORE_FILE'])
            storePassword getSecretKeys()['RELEASE_STORE_PASSWORD']
            keyAlias getSecretKeys()['RELEASE_KEY_ALIAS']
            keyPassword getSecretKeys()['RELEASE_KEY_PASSWORD']
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        applicationVariants.all{
                // this method is use to rename all apk weather
                // it may be signed or unsigned(debug apk)
            variant ->
                variant.outputs.each{
                    output->
                        def name = "AppName_${variant.versionName}.apk"
                        output.outputFileName = name
                }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "1.4.0"
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    namespace 'com.omsi.composetemplate'
}

dependencies {

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation 'androidx.compose.material3:material3:1.2.0-alpha02'
    //Stable release:
    //implementation "androidx.compose.material3:material3:1.1.0"

    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.activity:activity-compose:1.7.2'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    implementation "com.google.accompanist:accompanist-systemuicontroller:0.17.0"

    //Apollos libs
    implementation 'com.omsi.lib:terminal-tablet:1.0.12'

    //Dependency Injection Lib:
    implementation "com.google.dagger:hilt-android:2.45"
    kapt "com.google.dagger:hilt-compiler:2.45"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'
    implementation "androidx.navigation:navigation-compose:2.5.3"

    //splashScreen
    implementation 'androidx.core:core-splashscreen:1.0.1'
}


def getSecretKeys(){
    def keyFile = file("data.properties")
    def secretKeys = new Properties()
    secretKeys.load(new FileInputStream(keyFile))
    return secretKeys
}